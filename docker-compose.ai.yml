version: '3.8'

services:
  # n8n Workflow Automation
  n8n:
    image: n8nio/n8n:latest
    container_name: lab-verse-n8n
    restart: unless-stopped
    ports:
      - "5678:5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_USER:-admin}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_PASSWORD:-changeme123}
      - N8N_HOST=${N8N_HOST:-localhost}
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - NODE_ENV=production
      - WEBHOOK_URL=http://localhost:5678/
      - GENERIC_TIMEZONE=${TIMEZONE:-UTC}
      - N8N_LOG_LEVEL=info
      - N8N_DIAGNOSTICS_ENABLED=false
      # Lab-Verse specific settings
      - USE_LOCAL=${USE_LOCAL:-false}
      - LOCALAI_BASE_URL=http://localai:8080
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - HUGGINGFACE_API_KEY=${HUGGINGFACE_API_KEY}
      - OPENROUTER_SITE_URL=${OPENROUTER_SITE_URL:-https://lab-verse.local}
    volumes:
      - n8n_data:/home/node/.n8n
      - ./n8n/workflows:/home/node/.n8n/workflows
      - ./n8n/credentials:/home/node/.n8n/credentials
    depends_on:
      - postgres
      - localai
    networks:
      - lab-verse-network

  # LocalAI - Self-hosted OpenAI Alternative
  localai:
    image: localai/localai:latest
    container_name: lab-verse-localai
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - DEBUG=true
      - MODELS_PATH=/models
      - CONTEXT_SIZE=2048
      - THREADS=4
      # Enable GPU if available
      - GPU_LAYERS=${GPU_LAYERS:-0}
    volumes:
      - ./localai/models:/models
      - ./localai/config:/config
    command: >
      --models-path /models
      --context-size 2048
      --threads 4
      --debug
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - lab-verse-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: lab-verse-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-lab_verse}
      - POSTGRES_USER=${POSTGRES_USER:-lab_verse_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-secure_password_123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init:/docker-entrypoint-initdb.d
    networks:
      - lab-verse-network

  # Qdrant Vector Database (for AI embeddings)
  qdrant:
    image: qdrant/qdrant:latest
    container_name: lab-verse-qdrant
    restart: unless-stopped
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - lab-verse-network

  # Redis (for caching and sessions)
  redis:
    image: redis:7-alpine
    container_name: lab-verse-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis_secure_pass}
    volumes:
      - redis_data:/data
    networks:
      - lab-verse-network

  # Prometheus (Monitoring)
  prometheus:
    image: prom/prometheus:latest
    container_name: lab-verse-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - lab-verse-network

  # Grafana (Dashboards)
  grafana:
    image: grafana/grafana:latest
    container_name: lab-verse-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin123}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - lab-verse-network

volumes:
  n8n_data:
    driver: local
  postgres_data:
    driver: local
  qdrant_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  lab-verse-network:
    driver: bridge