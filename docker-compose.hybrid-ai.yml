version: '3.8'

# Lab-Verse Hybrid AI Stack: LocalAI + Perplexity + n8n
# Optimized for cost savings and smart routing

networks:
  lab-verse-hybrid:
    driver: bridge

volumes:
  localai-models:
  n8n-data:
  prometheus-data:
  grafana-data:

services:
  # LocalAI - Primary Provider (Free, Private, Fast)
  localai:
    image: localai/localai:latest-aio-cpu
    container_name: lab-verse-localai-hybrid
    ports:
      - "8080:8080"
    environment:
      - DEBUG=true
      - THREADS=4
      - CONTEXT_SIZE=4096
      - MODELS_PATH=/models
      - API_KEY=${LOCALAI_API_KEY:-}
    volumes:
      - localai-models:/models
    networks:
      - lab-verse-hybrid
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G

  # n8n - Workflow Orchestration with Hybrid Intelligence  
  n8n:
    image: n8nio/n8n:latest
    container_name: lab-verse-n8n-hybrid
    ports:
      - "5678:5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_USER:-admin}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_PASSWORD:-hybrid123}
      - N8N_HOST=${N8N_HOST:-localhost}
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - NODE_ENV=production
      - WEBHOOK_URL=http://localhost:5678
      - GENERIC_TIMEZONE=${TIMEZONE:-UTC}
      - N8N_LOG_LEVEL=info
      
      # Hybrid AI Configuration
      - USE_LOCAL=true
      - LOCAL_PRIORITY=true
      - LOCALAI_BASE_URL=http://localai:8080
      - ENABLE_METRICS=true
      - COST_TRACKING=true
      
      # Provider Endpoints
      - PERPLEXITY_API_URL=https://api.perplexity.ai
      - GEMINI_API_URL=https://generativelanguage.googleapis.com
      - OPENROUTER_API_URL=https://openrouter.ai/api/v1
      
    volumes:
      - n8n-data:/home/node/.n8n
      - ./n8n/workflows:/home/node/.n8n/workflows
    networks:
      - lab-verse-hybrid
    depends_on:
      - localai
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5678/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis - Caching and Session Management
  redis:
    image: redis:7-alpine
    container_name: lab-verse-redis-hybrid
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
    command: redis-server --appendonly yes --requirepass "${REDIS_PASSWORD:-}"
    volumes:
      - ./data/redis:/data
    networks:
      - lab-verse-hybrid
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 3s
      retries: 5

  # Prometheus - Metrics Collection
  prometheus:
    image: prom/prometheus:latest
    container_name: lab-verse-prometheus-hybrid
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    networks:
      - lab-verse-hybrid
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Grafana - Visualization and Dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: lab-verse-grafana-hybrid
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-hybrid123}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_DOMAIN=localhost
      - GF_SMTP_ENABLED=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - lab-verse-hybrid
    depends_on:
      - prometheus
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Cost Tracker - Custom service to track hybrid AI costs
  cost-tracker:
    build:
      context: ./services/cost-tracker
      dockerfile: Dockerfile
    container_name: lab-verse-cost-tracker
    ports:
      - "8081:8080"
    environment:
      - REDIS_URL=redis://redis:6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - PROMETHEUS_URL=http://prometheus:9090
      - LOG_LEVEL=info
    volumes:
      - ./data/costs:/app/data
    networks:
      - lab-verse-hybrid
    depends_on:
      - redis
      - prometheus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx - Reverse Proxy and Load Balancer
  nginx:
    image: nginx:alpine
    container_name: lab-verse-nginx-hybrid
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/hybrid.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - lab-verse-hybrid
    depends_on:
      - n8n
      - localai
      - grafana
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 5s
      retries: 3

  # Health Monitor - Overall system health
  health-monitor:
    build:
      context: ./services/health-monitor
      dockerfile: Dockerfile
    container_name: lab-verse-health-monitor
    ports:
      - "8082:8080"
    environment:
      - CHECK_INTERVAL=60
      - ALERT_THRESHOLD=3
      - SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL:-}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - lab-verse-hybrid
    depends_on:
      - localai
      - n8n
      - prometheus
      - grafana