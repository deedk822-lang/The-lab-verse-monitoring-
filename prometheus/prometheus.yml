# prometheus.yml ‚Äì Labverse Production Prometheus configuration
# -----------------------------------------------------------
# This file drives the ‚Äúrevenue monitoring‚Äù stack:
#   ‚Ä¢ Prometheus scrapes metrics from the app, Grafana, Alertmanager, ‚Ä¶
#   ‚Ä¢ Alerts are sent to the Alertmanager service defined in docker‚Äëcompose
#   ‚Ä¢ Business‚Äëspecific rule files live under prometheus/rules/
#   ‚Ä¢ Optional exporters (Postgres, Redis, RabbitMQ, Blackbox) are
#     stubbed out for easy enable‚Äëon‚Äëdemand.
# -----------------------------------------------------------

global:
  scrape_interval: 30s          # Default scrape interval for all jobs
  evaluation_interval: 30s      # How often rule files are evaluated
  external_labels:
    monitor: 'labverse-production'
    environment: 'production'
    region: 'africa'

# -----------------------------------------------------------------
# Where Prometheus sends alerts
# -----------------------------------------------------------------
alerting:
  alertmanagers:
    - static_configs:
        - targets: ['alertmanager:9093']   # Service name on the `monitoring` network

# -----------------------------------------------------------------
# Rule files ‚Äì place your .yml files under prometheus/rules/
# -----------------------------------------------------------------
rule_files:
  - "rules/*.yml"

# -----------------------------------------------------------------
# Scrape configurations
# -----------------------------------------------------------------
scrape_configs:

  # -------------------------------------------------------------
  # 1Ô∏è‚É£  Labverse application ‚Äì expose /metrics (e.g. FastAPI, Go, etc.)
  # -------------------------------------------------------------
  - job_name: 'labverse-app'
    metrics_path: '/metrics'
    scrape_interval: 15s
    scrape_timeout: 10s
    static_configs:
      - targets: ['web:8000']   # <-- ‚Äòweb‚Äô is the service name of your API
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
      - source_labels: [__metrics_path__]
        target_label: __metrics_path__

  # -------------------------------------------------------------
  # 2Ô∏è‚É£  Grafana ‚Äì Prometheus‚Äëcompatible metrics endpoint
  # -------------------------------------------------------------
  - job_name: 'grafana'
    metrics_path: '/metrics'
    static_configs:
      - targets: ['grafana:3000']
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance

  # -------------------------------------------------------------
  # 3Ô∏è‚É£  Prometheus self‚Äëmonitoring
  # -------------------------------------------------------------
  - job_name: 'prometheus'
    static_configs:
      - targets: ['prometheus:9090']

  # -------------------------------------------------------------
  # 4Ô∏è‚É£  Alertmanager self‚Äëmonitoring
  # -------------------------------------------------------------
  - job_name: 'alertmanager'
    static_configs:
      - targets: ['alertmanager:9093']

  # -------------------------------------------------------------
  # 5Ô∏è‚É£  Node Exporter ‚Äì host OS metrics
  # -------------------------------------------------------------
  # Node exporter runs on the host network (host‚Äëmode), so we reach it via
  # the host's DNS name. Adjust the address if you prefer a static IP.
  - job_name: 'node'
    static_configs:
      - targets: ['host.docker.internal:9100']
    scrape_interval: 60s   # Lower frequency to save bandwidth on African links

  # -------------------------------------------------------------
  # 6Ô∏è‚É£  Blackbox Exporter ‚Äì HTTP/HTTPS endpoint probing
  # -------------------------------------------------------------
  # OPTIONAL: Add a blackbox‚Äëexporter container (see Docker‚ÄëCompose) if you
  # want to monitor publicly‚Äëexposed URLs (e.g. checkout page, payment API).
  - job_name: 'blackbox'
    metrics_path: /probe
    params:
      module: [http_2xx]           # Use the http_2xx module (built‚Äëin)
    static_configs:
      - targets:
          - https://api.yourdomain.com/healthz   # your app health endpoint
          - https://www.yourdomain.com            # public landing page
          - https://payments.yourdomain.com/api   # payment gateway health
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115   # blackbox‚Äëexporter service name

  # -------------------------------------------------------------
  # 7Ô∏è‚É£  PostgreSQL Exporter (optional ‚Äì add container if needed)
  # -------------------------------------------------------------
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres_exporter:9187']

  # -------------------------------------------------------------
  # 8Ô∏è‚É£  Redis Exporter (optional ‚Äì add container if needed)
  # -------------------------------------------------------------
  - job_name: 'redis'
    static_configs:
      - targets: ['redis_exporter:9121']

  # -------------------------------------------------------------
  # 9Ô∏è‚É£  RabbitMQ Exporter (optional ‚Äì add container if needed)
  # -------------------------------------------------------------
  - job_name: 'rabbitmq'
    static_configs:
      - targets: ['rabbitmq_exporter:9419']

  # -------------------------------------------------------------
  #  üîü  Additional custom business‚Äëlevel metrics
  # -------------------------------------------------------------
  # Example: if your app publishes a custom ‚Äúrevenue_per_minute‚Äù metric,
  # you can create a dedicated job that scrapes it at a higher rate.
  # Uncomment & edit the block below when you add that endpoint.
  #
  # - job_name: 'revenue'
  #   metrics_path: '/metrics'
  #   scrape_interval: 10s
  #   static_configs:
  #     - targets: ['web:8000']
  #   relabel_configs:
  #     - source_labels: [__address__]
  #       target_label: instance